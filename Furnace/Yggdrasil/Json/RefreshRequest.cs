// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Yggdrasil.Json.Refresh;
//
//    var refreshRequest = RefreshRequest.FromJson(jsonString);

namespace Furnace.Yggdrasil.Json.Refresh
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class RefreshRequest
    {
        [JsonProperty("accessToken")]
        public string AccessToken { get; set; }

        [JsonProperty("clientToken")]
        public string ClientToken { get; set; }

        /* // This will result in an error if it is included in the request body (https://wiki.vg/Authentication)
        [JsonProperty("selectedProfile")]
        public SelectedProfile SelectedProfile { get; set; }
        */

        [JsonProperty("requestUser")]
        public bool RequestUser { get; set; }
    }

    public partial class SelectedProfile
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class RefreshRequest
    {
        public static RefreshRequest FromJson(string json) => JsonConvert.DeserializeObject<RefreshRequest>(json, Yggdrasil.Json.Refresh.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this RefreshRequest self) => JsonConvert.SerializeObject(self, Yggdrasil.Json.Refresh.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
